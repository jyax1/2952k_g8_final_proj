{
    // Use IntelliSense to learn about possible attributes.
    // Hover to view descriptions of existing attributes.
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",
    "configurations": [
    
        



        {
            "name": "Python Debugger: Current File",
            "type": "debugpy",
            "request": "launch",
            "program": "${file}",
            "console": "integratedTerminal"
        },
        {
            "name": "train direct_cnn_mlp ADAM",
            "type": "debugpy",
            "request": "launch",
            "program": "action_extractor/train.py",
            "console": "integratedTerminal",
            "args": ["-a=direct_cnn_mlp", "--latent_dim=32", "--epoch=10", "--batch_size=16", "--horizon=2", "--cameras=frontview_image"]
        },
        {
            "name": "train direct_cnn_mlp SGD",
            "type": "debugpy",
            "request": "launch",
            "program": "action_extractor/train.py",
            "console": "integratedTerminal",
            "args": ["-a=direct_cnn_mlp", "--latent_dim=32", "--epoch=10", "--batch_size=16", "--horizon=2", "--cameras=sideview_image", "--optimizer=sgd", "--momentum=0.9", "--learning_rate=0.001"]
        },
        {
            "name": "train direct_cnn_mlp",
            "type": "debugpy",
            "request": "launch",
            "program": "action_extractor/train.py",
            "console": "integratedTerminal",
            "args": ["-a=direct_cnn_mlp", "--latent_dim=32", "--epoch=10", "--batch_size=16", "--horizon=2"]
        },
        {
            "name": "train direct_cnn_vit",
            "type": "debugpy",
            "request": "launch",
            "program": "action_extractor/train.py",
            "console": "integratedTerminal",
            "args": ["-a=direct_cnn_vit", "--latent_dim=32", "--epoch=10", "--batch_size=50", "-ipm", "--horizon=2", "-vps=1"]
        },
        {
            "name": "train direct_resnet_mlp rgbd",
            "type": "debugpy",
            "request": "launch",
            "program": "action_extractor/train.py",
            "console": "integratedTerminal",
            "args": ["-a=direct_resnet_mlp", "--epoch=10", "-rln=18", "--horizon=1", "--action_type=pose", "--data_modality=rgbd", "-dpc=1.0"]
        },
        {
            "name": "train direct_resnet_mlp rgbd delta",
            "type": "debugpy",
            "request": "launch",
            "program": "action_extractor/train.py",
            "console": "integratedTerminal",
            "args": ["-a=direct_resnet_mlp", "--epoch=10", "-rln=18", "--horizon=2", "--action_type=delta_pose", "--data_modality=rgbd", "-dpc=1.0"]
        },
        {
            "name": "train direct_resnet_mlp color_mask_depth",
            "type": "debugpy",
            "request": "launch",
            "program": "action_extractor/train.py",
            "console": "integratedTerminal",
            "args": ["-a=direct_resnet_mlp", "--epoch=10", "-rln=18", "--horizon=1", "--action_type=pose", "--data_modality=color_mask_depth", "-dpc=1.0"]
        },
        {
            "name": "train direct_resnet_mlp cropped_rgbd",
            "type": "debugpy",
            "request": "launch",
            "program": "action_extractor/train.py",
            "console": "integratedTerminal",
            "args": ["-a=direct_resnet_mlp", "--epoch=10", "-rln=18", "--horizon=1", "--action_type=pose", "--data_modality=cropped_rgbd", "-dpc=1.0"]
        },
        {
            "name": "train direct_resnet_mlp cropped_rgbd+color_mask_depth",
            "type": "debugpy",
            "request": "launch",
            "program": "action_extractor/train.py",
            "console": "integratedTerminal",
            "args": ["-a=direct_resnet_mlp", "--epoch=10", "-rln=18", "--horizon=1", "--action_type=pose", "--data_modality=cropped_rgbd+color_mask_depth", "-dpc=1.0"]
        },
        {
            "name": "train direct_resnet_mlp rgb bi_cameras",
            "type": "debugpy",
            "request": "launch",
            "program": "action_extractor/train.py",
            "console": "integratedTerminal",
            "args": ["-a=direct_resnet_mlp", "--epoch=10", "-rln=18", "--horizon=2", "--cameras=frontview_image,sideview_image", "--action_type=delta_position+gripper", "--data_modality=rgb", "-dpc=1.0"]
        },
        {
            "name": "train direct_resnet_mlp color_mask_depth delta_position",
            "type": "debugpy",
            "request": "launch",
            "program": "action_extractor/train.py",
            "console": "integratedTerminal",
            "args": ["-a=direct_resnet_mlp", "--epoch=10", "-rln=18", "--horizon=2", "--action_type=delta_position", "--data_modality=color_mask_depth", "-dpc=1.0"]
        },
        {
            "name": "train direct_resnet_mlp color_mask_depth delta_position+gripper",
            "type": "debugpy",
            "request": "launch",
            "program": "action_extractor/train.py",
            "console": "integratedTerminal",
            "args": ["-a=direct_resnet_mlp", "--epoch=10", "-rln=18", "--horizon=2", "--action_type=delta_position+gripper", "--data_modality=color_mask_depth", "-dpc=1.0"]
        },
        {
            "name": "train direct_resnet_mlp color_mask_depth position disentangled",
            "type": "debugpy",
            "request": "launch",
            "program": "action_extractor/train.py",
            "console": "integratedTerminal",
            "args": ["-a=direct_resnet_mlp", "--epoch=10", "-rln=18", 
            "--horizon=1", "--action_type=position", "--standardize_data", "--coordinate_system=disentangled", "--data_modality=color_mask_depth", "-dpc=1.0"]
        },
        {
            "name": "train direct_resnet_mlp color_mask_depth delta",
            "type": "debugpy",
            "request": "launch",
            "program": "action_extractor/train.py",
            "console": "integratedTerminal",
            "args": ["-a=direct_resnet_mlp", "--epoch=10", "-rln=18", "--horizon=2", "--action_type=delta_pose", "--data_modality=color_mask_depth", "-dpc=1.0"]
        },
        {
            "name": "train flownet2 rgbd",
            "type": "debugpy",
            "request": "launch",
            "program": "action_extractor/train.py",
            "console": "integratedTerminal",
            "args": ["-a=flownet2", "--epoch=10", "-fv=FlowNet2", "--horizon=1", "--action_type=pose", "--data_modality=rgbd"]
        },
        {
            "name": "train direct_resnet_mlp voxel",
            "type": "debugpy",
            "request": "launch",
            "program": "action_extractor/train.py",
            "console": "integratedTerminal",
            "args": ["-a=direct_resnet_mlp", "--epoch=10", "-rln=101", "--horizon=1", "--action_type=pose", "--data_modality=voxel"]
        },
        {
            "name": "train direct_resnet_mlp abs rgb",
            "type": "debugpy",
            "request": "launch",
            "program": "action_extractor/train.py",
            "console": "integratedTerminal",
            "args": ["-a=direct_resnet_mlp", "--epoch=10", "-rln=101", "--horizon=1", "--cameras=spaceview_image", "--action_type=absolute_pose", "--data_modality=rgb"]
        },
        {
            "name": "train latent_encoder_resnet_unet",
            "type": "debugpy",
            "request": "launch",
            "program": "action_extractor/train.py",
            "console": "integratedTerminal",
            "args": ["-a=latent_encoder_resnet_unet", "--epoch=10", "--batch_size=50", "-rln=18", "--horizon=2"]
        },
        {
            "name": "train latent_encoder_cnn_unet",
            "type": "debugpy",
            "request": "launch",
            "program": "action_extractor/train.py",
            "console": "integratedTerminal",
            "args": ["-a=latent_encoder_cnn_unet", "--latent_dim=4", "--epoch=10", "--batch_size=16", "--horizon=2"]
        },
        {
            "name": "train latent_decoder_mlp cnn",
            "type": "debugpy",
            "request": "launch",
            "program": "action_extractor/train.py",
            "console": "integratedTerminal",
            "args": ["-a=latent_decoder_mlp", "--latent_dim=32", "--epoch=10", "--batch_size=16", "--horizon=2", "-idm=latent_cnn_unet_lat32_mFalse_ipmFalse_res50_vps8_fidmFalse_ffdmFalse_idm-3-4000.pth"]
        },
        {
            "name": "train latent_decoder_mlp resnet",
            "type": "debugpy",
            "request": "launch",
            "program": "action_extractor/train.py",
            "console": "integratedTerminal",
            "args": ["-a=latent_decoder_mlp", "--latent_dim=32", "--epoch=10", "--batch_size=16", "--horizon=2", "-idm=latent_encoder_resnet_unet_cam['frontview_image']_emb['']_lat32_res18_vps2_fidmFalse_ffdmFalse_optsgd_lr0.001_mmt0.9__idm-1-4000.pth"]
        },
        {
            "name": "train latent_decoder_vit",
            "type": "debugpy",
            "request": "launch",
            "program": "action_extractor/train.py",
            "console": "integratedTerminal",
            "args": ["-a=latent_decoder_vit", "--latent_dim=4", "--epoch=10", "--batch_size=16", "--horizon=2", "-idm=latent_encoder_resnet_unet_cam['frontview_image']_emb['']_lat32_res18_vps2_fidmFalse_ffdmFalse_optsgd_lr0.001_mmt0.9__idm-1-4000.pth"]
        },
        {
            "name": "train latent_decoder_obs_conditioned_unet_mlp",
            "type": "debugpy",
            "request": "launch",
            "program": "action_extractor/train.py",
            "console": "integratedTerminal",
            "args": ["-a=latent_decoder_obs_conditioned_unet_mlp", "--latent_dim=4", "--epoch=10", "--batch_size=1", "--horizon=2", "-idm=latent_encoder_resnet_unet_cam['frontview_image']_emb['']_lat32_res18_vps2_fidmFalse_ffdmFalse_optsgd_lr0.001_mmt0.9__idm-1-4000.pth"]
        },
        {
            "name": "train latent_decoder_aux_separate_unet_vit",
            "type": "debugpy",
            "request": "launch",
            "program": "action_extractor/train.py",
            "console": "integratedTerminal",
            "args": ["-a=latent_decoder_aux_separate_unet_vit", "--latent_dim=4", "--epoch=10", "--batch_size=16", "--horizon=2", 
            "-idm=latent_encoder_resnet_unet_cam['frontview_image']_emb['']_lat32_res18_vps2_fidmFalse_ffdmFalse_optsgd_lr0.001_mmt0.9__idm-1-4000.pth", "-fdm=latent_encoder_resnet_unet_cam['frontview_image']_emb['']_lat32_res18_vps2_fidmFalse_ffdmFalse_optsgd_lr0.001_mmt0.9__fdm-1-4000.pth"]
        },
        {
            "name": "train latent_decoder_aux_separate_unet_mlp",
            "type": "debugpy",
            "request": "launch",
            "program": "action_extractor/train.py",
            "console": "integratedTerminal",
            "args": ["-a=latent_decoder_aux_separate_unet_mlp", "--latent_dim=4", "--epoch=10", "--batch_size=16", "--horizon=2", 
            "-idm=latent_encoder_resnet_unet_cam['frontview_image']_emb['']_lat32_res50_vps2_fidmFalse_ffdmFalse_optsgd_lr0.001_mmt0.9__idm-1-6000.pth", "-fdm=latent_encoder_resnet_unet_cam['frontview_image']_emb['']_lat32_res50_vps2_fidmFalse_ffdmFalse_optsgd_lr0.001_mmt0.9__fdm-1-6000.pth"]
        },
        {
            "name": "train latent_decoder_aux_combined_vit",
            "type": "debugpy",
            "request": "launch",
            "program": "action_extractor/train.py",
            "console": "integratedTerminal",
            "args": ["-a=latent_decoder_aux_combined_vit", "--latent_dim=4", "--epoch=10", "--batch_size=16", "--horizon=2", 
            "-idm=idm_latent_cnn_unet_lat_32_m_False_ipm_False-1-8000.pth", "-fdm=fdm_latent_cnn_unet_lat_32_m_False_ipm_False-1-8000.pth"]
        },
        {
            "name": "visualize latent_actions",
            "type": "debugpy",
            "request": "launch",
            "program": "validation_visualization.py",
            "console": "integratedTerminal",
            "args": [ "-mn=fdm_latent_cnn_unet_lat_32_m_False_ipm_False-1-8000.pth"]
        },

        {
            "name": "validate latent decoder actions",
            "type": "debugpy",
            "request": "launch",
            "program": "validation_visualization.py",
            "console": "integratedTerminal",
            "args": [ "-emn=latent_encoder_resnet_unet_cam['frontview_image']_emb['']_lat32_res50_vps2_fidmFalse_ffdmFalse_optsgd_lr0.001_mmt0.9__idm-1-6000.pth", "-dmn=latent_decoder_mlp_cam['frontview_image']_emb['']_lat32_res0_vps16_fidmFalse_ffdmFalse_optadam_lr0.001_mmt0.9_-1-470.pth"]
        },


        {
            "name": "validate direct resnet actions",
            "type": "debugpy",
            "request": "launch",
            "program": "validation_visualization.py",
            "console": "integratedTerminal",
            "args": [ "--direct_model_name=direct_resnet_mlp_lat32_mFalse_ipmFalse_res50_vps8_fidmFalse_ffdmFalse_mlp-2-9156.pth"]
        },

        {
            "name": "process dataset actions to latent actions",
            "type": "debugpy",
            "request": "launch",
            "program": "process_dataset_actions_to_latent_actions.py",
            "console": "integratedTerminal",
            "args": [ "--dataset_path=/home/yilong/Documents/policy_data/lift/obs/lift_panda1000/lift_panda1000_raw.hdf5", 
            "--encoder_model_path=results/iiwa16168-cropped_rgbd+color_mask-delta_position+gripper-frontside-bs1632_resnet-50-300.pth",
            "--data_modality=cropped_rgbd+color_mask", "--action_type=delta_position+gripper", "--video_length=2"]
        },
        
        // python action_extractor/train.py  --epoch 50 --batch_size 1632 -rln 18 --horizon 2 --data_modality cropped_rgbd+color_mask --action_type delta_position+gripper --note iiwa16168-cropped_rgbd+color_mask-delta_position+gripper-frontside-bs1632 --cameras frontview_image,sideview_image --learning_rate 0.001 --num_mlp_layers 3 --val_demo_percentage 0.9 --demo_percentage 0.9 --standardize_data --coordinate_system global --cosine_similarity_loss


        {
            "name": "debug resnet",
            "type": "debugpy",
            "request": "launch",
            "program": "action_extractor/train.py",
            "console": "integratedTerminal",
            "args": ["-a=direct_resnet_mlp",
            "--epoch=50",
            "--batch_size=16",
            "-rln=18",
            "--horizon=2",
            "--data_modality=cropped_rgbd+color_mask",
            "--action_type=delta_position+gripper",
            "--note=debug-frontside",
            "--cameras=frontview_image,sideview_image",
            "--learning_rate=0.001",
            "--num_mlp_layers=3",
            "--val_demo_percentage=0.9",
            "--demo_percentage=0.9",
            "--coordinate_system=global",
            "--loss=cosine+mse",
            "--vMF_sample_method=rejection",
            "--standardize_data"
        ]
        },

        {
            "name": "debug SLA",
            "type": "debugpy",
            "request": "launch",
            "program": "action_extractor/train.py",
            "console": "integratedTerminal",
            "args": ["-a=direct_SLA_variational_resnet",
            "--epoch=50",
            "--batch_size=16",
            "-rln=18",
            "--horizon=2",
            "--data_modality=cropped_rgbd+color_mask",
            "--action_type=delta_position+gripper",
            "--note=debug-frontside",
            "--cameras=frontview_image,sideview_image",
            "--learning_rate=0.001",
            "--num_mlp_layers=3",
            "--val_demo_percentage=0.9",
            "--demo_percentage=0.9",
            "--coordinate_system=global",
            "--loss=cosine+mse",
            "--vMF_sample_method=rejection",
            "--standardize_data"
        ]
        },

        {
            "name": "debug dataset_states_to_obs_parallel.py",
            "type": "debugpy",
            "request": "launch",
            "program": "action_extractor/utility_scripts/dataset_states_to_obs_parallel.py",
            "console": "integratedTerminal",
            "args": ["--dataset=/home/yilong/Documents/mimicgen/datasets/robot/square_d0_iiwa.hdf5",
            "--camera_height=84",
            "--camera_width=84",
            "--output_name=square_d0_obs_orig_black_matte0.0_mimicgeniiwa_16.hdf5",
            "--compress",
            "--num_workers=1"
        ]
        },

        {
            "name": "debug dataset_convert_robot.py",
            "type": "debugpy",
            "request": "launch",
            "program": "action_extractor/utility_scripts/dataset_convert_robot.py",
            "console": "integratedTerminal",
            "args": ["--dataset=/home/yilong/Documents/robo/robomimic_3d/datasets/square/ph/low_dim_v141.hdf5",
            "--output_name=square_d0_convert_debug.hdf5",
            "--new_robot=Panda",
            "--verbose"
        ]
        },

        {
            "name": "visualize_pseudo_actions_rollouts",
            "type": "debugpy",
            "request": "launch",
            "program": "action_extractor/point_cloud/robosuite/visualize_pseudo_actions_rollouts.py",
            "console": "integratedTerminal",
        },

        {
            "name": "label_robosuite_dataset_with_pseudo_actions.py",
            "type": "debugpy",
            "request": "launch",
            "program": "action_extractor/point_cloud/robosuite/label_robosuite_dataset_with_pseudo_actions.py",
            "console": "integratedTerminal",
            "args": ["--hdf5_path=/home/yilong/Documents/diffusion_policy/data/robomimic/datasets/square/ph/square_d0_obs_orig_black_matte0.0_iiwa.hdf5",
            "--output_hdf5_name=square_d0_obs_pseudo_black_matte0.0_iiwa.hdf5",
            "--num_workers=1"
            ]
        },

        {
            "name": "Debug imitate_trajectory_with_megapose.py with Xvfb",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/action_extractor/megapose/imitate_trajectory_with_megapose.py",
            // This calls our script in debug mode with your normal breakpoints.
            
            "console": "integratedTerminal",
            "justMyCode": true,
            
            // 1) Tells VS Code to run the "startXvfb" task before debugging
            "preLaunchTask": "startXvfb",
            
            // 2) Exports DISPLAY=:99 so Panda3D / PyOpenGL sees an X server
            "env": {
              "DISPLAY": ":99"
            },
            
            // Optional arguments if you want
            "args": [
              // e.g. "--some-flag", "value"
            ]
        }
    ]
}