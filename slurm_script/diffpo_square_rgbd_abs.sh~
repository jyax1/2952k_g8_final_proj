run()
{
jn=VIDEOPO_${task}_${obsNet}_demo${n_demos}_${date}
export train_args="
--config-dir=. 
--config-name=train_diffusion_unet_image_workspace.yaml 
policy.obs_encoder.rgb_model._target_=${obs_target} 
policy.obs_encoder.rgb_model.name=${obsNet} 
policy.obs_encoder.crop_shape=${crop_shape} 
task=${task} 
task.dataset.max_train_episodes=${n_demos} 
training.num_epochs=500 
training.seed=42 
training.device=cuda 
task.dataset_root_path=${dataroot} 
dataloader.num_workers=16 
"
slurm_args=""

jn1=${jn}_train
#echo "sbatch ${slurm_args} --job-name=${jn1} ${train_script} ${args}"
jobID_1=$(sbatch ${slurm_args} --job-name=${jn1} --export=ALL ${train_script} | cut -f 4 -d' ')
}



train_only()
{
train_script=slurm_scripts/train.sbatch
run
}

date=0702

dataroot=/users/mjia11/scratch/diffusion_policy

task=square_rgbd_abs
obs_target=diffusion_policy.model.vision.model_getter.get_rgbd_net
obsNet=resnet18
crop_shape=[116,116]

n_demos=200
train_only
n_demos=100
train_only
n_demos=50
train_only

task=square_image_abs
obs_target=diffusion_policy.model.vision.model_getter.get_resnet
obsNet=resnet18
crop_shape=[76,76]

n_demos=200
train_only
n_demos=100
train_only
n_demos=50
train_only
